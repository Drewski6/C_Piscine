/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_split.c                                         :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: dpentlan <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/08/30 13:11:29 by dpentlan          #+#    #+#             */
/*   Updated: 2022/08/31 13:15:23 by dpentlan         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>

int	ft_strlen(char *src, char *charset)
{
	int	i;
	int	j;

	i = 0;
	while (src[i])
	{
		j = 0;
		while (src[i] != charset[j])
			j++;
		i++;
	}
	return (i);
}

char	*ft_strdup(char *src, char *charset)
{
	char	*str_ret;
	int		src_len;
	int		i;

	src_len = ft_strlen(src, charset);	
	str_ret = (char *)malloc(src_len * sizeof(char) + 1);
	if (!str_ret)
		return (0);
	i = 0;
	while (src[i] && i < src_len)
	{
		str_ret[i] = src[i];
		i++;
	}
	str_ret[i] = '\0';
	return (str_ret);
}

int	str_count(char *str, char *charset)
{
	int	i;
	int	j;
	int	str_num;

	i = 0;
	str_num = 0;
	while (str[i])
	{
		j = 0;
		while (str[i] != charset[j] && charset[j])
			j++;
		if (!charset[j])
			str_num++;
		i++;
	}
	return (str_num);
}

char	*str_jump(char *str, char *charset)
{
	int	i;

	i = 0;
	while (*str)
	{
		i = 0;
		while (*str != charset[i] && charset[i])
			i++;
		if (!charset[i])
			str++;
		else
			break ;
	}
	while (*str)
	{
		i = 0;
		while (*str != charset[i] && charset[i])
			i++;
		if (charset[i])
			str++;
		else
			break ;
	}
	return (str);
}

char	**ft_split(char *str, char *charset)
{
	int		str_num;
	char	**table;
	int		str_len;
	int		i;

	str_len = 0;
	str_num = 0;
	str_num = str_count(str, charset);
	if (!str_num)
		return (0);
	table = (char **)malloc(sizeof(char *) * str_num);
	if (!table)
		return (0);
	i = 0;
	while (i < str_num)
	{
		str = str_jump(str, charset);
		str_len = ft_strlen(str, charset);
		if (!str_len)
			return (0);
		table[i] = (char *)malloc(sizeof(char) * str_len + 1);
		if (!table[i])
			return (0);
		table[i] = ft_strdup(str, charset);
		if (!table[i])
			return (0);
		i++;
	}
	table[i] = "\0";
	return (table);
}

#include <stdio.h>
int main(int argc, char **argv)
{
	char **table;
	(void)argc;
	int i;

	table = ft_split(argv[1], argv[2]);
	i = 0;
	while (i < argc)
	{
		printf("table[%d] = %s\n", i, table[i]);
		i++;
	}
	free(table);
	return (0);
}
